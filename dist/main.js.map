{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/products/product-list.component.css","webpack:///./src/app/products/product-list.component.html","webpack:///./src/app/products/product-list.component.ts","webpack:///./src/app/products/product.service.ts","webpack:///./src/app/shared/convert-to-spaces.pipe.ts","webpack:///./src/app/shared/star.component.css","webpack:///./src/app/shared/star.component.html","webpack:///./src/app/shared/star.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pm-root',\n  template: `\n    <div>\n      <h1>{{ pageTitle }}</h1>\n      <pm-products></pm-products>\n    </div>\n  `\n})\nexport class AppComponent {\n  pageTitle: string = 'CodeAce: Product Management';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\nimport { ProductListComponent } from './products/product-list.component';\nimport { ConvertToSpacesPipe } from './shared/convert-to-spaces.pipe';\nimport { StarComponent } from './shared/star.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    ConvertToSpacesPipe,\n    StarComponent,\n  ],\n  imports: [\n  BrowserModule,\n  FormsModule,\n  HttpClientModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"thead {\\n  color: blue;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0NBQ2IiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9wcm9kdWN0LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRoZWFkIHtcbiAgY29sb3I6IGJsdWU7XG59Il19 */\"","module.exports = \"<div class='card'>\\n  <div class='card-header'>\\n    {{ pageTitle }}\\n  </div>\\n  <div class='card-body'>\\n    <div class='row'>\\n      <div class=\\\"col-md-2\\\">Filter by:</div>\\n      <div class=\\\"col-md-4\\\">\\n        <input \\n          type=\\\"text\\\"\\n          [(ngModel)]='listFilter'\\n         />\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <h4>Filtered by: {{ listFilter }}</h4>\\n      </div>\\n    </div>\\n    <div class='table-responsive'>\\n      <table class='table' *ngIf='products && products.length'>\\n        <thead>\\n          <tr>\\n            <th>\\n              <button \\n                class='btn btn-primary'\\n                (click)='toggleImage()'\\n                >\\n                  {{ showImage ? 'Hide' : 'Show'  }} Image\\n              </button>\\n            </th>\\n            <th>Product</th>\\n            <th>Code</th>\\n            <th>Available</th>\\n            <th>Price</th>\\n            <th>5 Star Rating</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor='let product of filteredProducts'>\\n            <td>\\n              <img *ngIf='showImage' [src]='product.imageUrl'\\n              [title]='product.productName' alt=\\\"product image\\\"\\n              [style.width.px]='imageWidth'\\n              [style.margin.px]='imageMargin' />\\n            </td>\\n            <td>{{ product.productName }}</td>\\n            <td>{{ product.productCode | lowercase | convertToSpaces: '-'  }}</td>\\n            <td>{{ product.releaseDate }}</td>\\n            <td>{{ product.price | currency:'USD':'symbol': '1.2-2' }}</td>\\n            <td>\\n              <pm-star \\n                [rating]='product.starRating'\\n                (ratingClicked)='onRatingClicked($event)'>\\n              </pm-star>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { IProduct } from './product';\nimport { ProductService } from './product.service';\n\n@Component({\n  selector: 'pm-products',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  pageTitle: string = 'Product List';\n  imageWidth: number = 50;\n  imageMargin: number = 2;\n  showImage: boolean = false;\n  _listFilter: string;\n  filteredProducts: IProduct[];\n  products: IProduct[] = [];\n  errorMessage: string\n\n  constructor(private productService: ProductService) {\n  }  \n  \n  private get listFilter(): string {\n    return this._listFilter;\n  }\n\n  private set listFilter(value:string) {\n    const { listFilter } = this;\n    this._listFilter = value;\n    this.filteredProducts = listFilter ? this.performFilter(listFilter): this.products\n  }\n\n  toggleImage(): void {\n    this.showImage = !this.showImage;\n  };\n\n  ngOnInit(): void {\n    this.productService.getProducts().subscribe(\n      products => {\n        this.products = products ;\n        this.filteredProducts = this.products;\n      },\n      error => this.errorMessage = <any>error\n    );\n  };\n\n  performFilter(filterBy: string): IProduct[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.products.filter((product: IProduct) => product.productName.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }  \n  \n  onRatingClicked(message: string): void {\n    this.pageTitle = 'Product List: ' + message\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { IProduct } from \"./product\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private productUrl = 'api/products/products.json'\n\n  constructor(private http: HttpClient) {\n\n  }\n  getProducts(): Observable<IProduct[]> {\n    return this.http.get<IProduct[]>(this.productUrl).pipe(tap(),catchError(this.handleError));\n  }\n\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}","import { Pipe } from \"@angular/core\";\n\n@Pipe({\n  name: 'convertToSpaces'\n})\nexport class ConvertToSpacesPipe {\n  transform(value: string, character: string): string {\n    return value.replace(character, ' ');\n  }\n}","module.exports = \".crop {\\n  overflow: hidden;\\n}\\ndiv {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3N0YXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtDQUNsQjtBQUNEO0VBQ0UsZ0JBQWdCO0NBQ2pCIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL3N0YXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jcm9wIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbmRpdiB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\"","module.exports = \"<div class=\\\"crop\\\"\\n     [style.width.px]=\\\"starWidth\\\"\\n     [title]=\\\"rating\\\"\\n     (click)=\\\"onClick()\\\">\\n  <div style=\\\"width: 75px\\\">\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n  </div>\\n</div>\"","import { Component, OnChanges, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'pm-star',\n  templateUrl: './star.component.html',\n  styleUrls: ['./star.component.css'],\n})\nexport class StarComponent implements OnChanges {\n  @Input() rating: number ;  \n  starWidth: number;\n  @Output() ratingClicked: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() {\n    this.rating = 0\n    this.starWidth = 0\n  }\n\n  ngOnChanges(): number {\n    return this.starWidth = this.rating * 75 / 5\n  } \n  \n  onClick(): void {\n    this.ratingClicked.emit(`The rating ${this.rating} was clicked!`)\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}